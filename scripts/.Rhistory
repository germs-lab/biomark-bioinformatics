labs(y = "mean Ct value", x = "Gene", title = "Cycle times for genes of interest in poultry manure \n sorted by most abundant gene on top")
order <- water %>%
filter(Value < 28, Call == "Pass") %>%
group_by(treatment, Assay, sample_number) %>%
dplyr::mutate(mean = mean(as.numeric(Value))) %>%
arrange(-mean) %>%
pull(Assay)
plot <- water %>%
filter(Value < 28, Call == "Pass") %>%
group_by(treatment, Assay, sample_number) %>%
dplyr::mutate(mean = mean(as.numeric(Value))) %>%
ggboxplot(x = "Assay", y = "mean", order = order, fill = "Assay") +
facet_grid(treatment ~ sample_number) +
scale_fill_viridis_d() +
coord_flip() +
theme(legend.position = "none") +
labs(y = "mean Ct value", x = "Gene", title = "Cycle times for genes of interest in poultry manure \n sorted by most abundant gene on top")
plot <- water %>%
filter(Value < 28, Call == "Pass") %>%
group_by(treatment, Assay, sample_number) %>%
dplyr::mutate(mean = mean(as.numeric(Value))) %>%
ggboxplot(x = "Assay", y = "mean", fill = "Assay") +
facet_grid(treatment ~ sample_number) +
scale_fill_viridis_d() +
coord_flip() +
theme(legend.position = "none") +
labs(y = "mean Ct value", x = "Gene", title = "Cycle times for genes of interest in poultry manure \n sorted by most abundant gene on top")
plot
order <- water %>%
filter(Value < 28, Call == "Pass") %>%
group_by(treatment, Assay, sample_number) %>%
dplyr::mutate(mean = mean(as.numeric(Value)))
View(order)
order <- water %>%
filter(Value < 28, Call == "Pass") %>%
group_by(Assay) %>%
dplyr::mutate(mean = mean(as.numeric(Value))) %>%
arrange(-mean) %>%
pull(Assay)
order <- water %>%
filter(Value < 28, Call == "Pass") %>%
group_by(Assay) %>%
dplyr::mutate(mean = mean(as.numeric(Value))) %>%
arrange(-mean)
distinct(order$Assay)
unique(order$Assay)
order <- water %>%
filter(Value < 28, Call == "Pass") %>%
group_by(Assay) %>%
dplyr::mutate(mean = mean(as.numeric(Value))) %>%
arrange(-mean) %>%
unique(Assay) %>%
pull(Assay)
order <- water %>%
filter(Value < 28, Call == "Pass") %>%
group_by(Assay) %>%
dplyr::mutate(mean = mean(as.numeric(Value))) %>%
arrange(-mean) %>%
unique(Assay)
order <- water %>%
filter(Value < 28, Call == "Pass") %>%
group_by(Assay) %>%
dplyr::mutate(mean = mean(as.numeric(Value))) %>%
arrange(-mean) %>%
pull(unique(.$Assay))
order <- water %>%
filter(Value < 28, Call == "Pass") %>%
group_by(Assay) %>%
dplyr::mutate(mean = mean(as.numeric(Value))) %>%
arrange(-mean) %>%
pull()
order <- water %>%
filter(Value < 28, Call == "Pass") %>%
group_by(Assay) %>%
dplyr::mutate(mean = mean(as.numeric(Value))) %>%
arrange(-mean) %>%
pull(Assay) %>%
unique()
plot <- water %>%
filter(Value < 28, Call == "Pass") %>%
group_by(treatment, Assay, sample_number) %>%
dplyr::mutate(mean = mean(as.numeric(Value))) %>%
ggboxplot(x = "Assay", y = "mean", fill = "Assay", order = order) +
facet_grid(treatment ~ sample_number) +
scale_fill_viridis_d() +
coord_flip() +
theme(legend.position = "none") +
labs(y = "mean Ct value", x = "Gene", title = "Cycle times for genes of interest in poultry manure \n sorted by most abundant gene on top")
plot
plot <- water %>%
filter(Value < 28, Call == "Pass") %>%
group_by(treatment, Assay, sample_number) %>%
dplyr::mutate(mean = mean(as.numeric(Value))) %>%
ggboxplot(x = "Assay", y = "Value", fill = "Assay", order = order) +
facet_grid(treatment ~ sample_number) +
scale_fill_viridis_d() +
coord_flip() +
theme(legend.position = "none") +
labs(y = "mean Ct value", x = "Gene", title = "Cycle times for genes of interest in poultry manure \n sorted by most abundant gene on top")
plot
plot <- water %>%
filter(Value < 28, Call == "Pass", Assay %in% manargs) %>%
group_by(treatment, Assay, sample_number) %>%
dplyr::mutate(mean = mean(as.numeric(Value))) %>%
ggboxplot(x = "Assay", y = "Value", fill = "Assay", order = order) +
facet_grid(treatment ~ sample_number) +
scale_fill_viridis_d() +
coord_flip() +
theme(legend.position = "none") +
labs(y = "mean Ct value", x = "Gene", title = "Cycle times for genes of interest in poultry manure \n sorted by most abundant gene on top")
plot
plot <- water %>%
filter(Value < 28, Call == "Pass", Assay %in% manargs) %>%
group_by(treatment, Assay, sample_number) %>%
dplyr::mutate(mean = mean(as.numeric(Value))) %>%
ggboxplot(x = "Assay", y = "Value", fill = "Assay", order = order) +
facet_grid(treatment ~ sample_number) +
scale_fill_viridis_d() +
coord_flip() +
theme(legend.position = "none") +
labs(y = "mean Ct value", x = "Gene", title = "Cycle times for genes from poultry manure in runoff water ")
plot
plot <- water %>%
filter(Value < 28, Call == "Pass", Assay %in% manargs) %>%
group_by(treatment, Assay) %>%
dplyr::mutate(mean = mean(as.numeric(Value))) %>%
ggboxplot(x = "Assay", y = "Value", fill = "Assay", order = order) +
facet_grid(treatment ~ sample_number) +
scale_fill_viridis_d() +
coord_flip() +
theme(legend.position = "none") +
labs(y = "mean Ct value", x = "Gene", title = "Cycle times for genes from poultry manure in runoff water ")
plot
plot <- water %>%
filter(Value < 28, Call == "Pass", Assay %in% manargs) %>%
group_by(treatment, Assay) %>%
dplyr::mutate(mean = mean(as.numeric(Value))) %>%
ggboxplot(x = "Assay", y = "Value", fill = "Assay", order = order) +
facet_grid(treatment) +
scale_fill_viridis_d() +
coord_flip() +
theme(legend.position = "none") +
labs(y = "mean Ct value", x = "Gene", title = "Cycle times for genes from poultry manure in runoff water ")
plot <- water %>%
filter(Value < 28, Call == "Pass", Assay %in% manargs) %>%
group_by(treatment, Assay) %>%
dplyr::mutate(mean = mean(as.numeric(Value))) %>%
ggboxplot(x = "Assay", y = "Value", fill = "Assay", order = order) +
facet_grid(~treatment) +
scale_fill_viridis_d() +
coord_flip() +
theme(legend.position = "none") +
labs(y = "mean Ct value", x = "Gene", title = "Cycle times for genes from poultry manure in runoff water ")
plot
plot <- water %>%
filter(Value < 28, Call == "Pass", Assay %in% manargs, !treatment == "WCS" ) %>%
group_by(treatment, Assay) %>%
dplyr::mutate(mean = mean(as.numeric(Value))) %>%
ggboxplot(x = "Assay", y = "Value", fill = "Assay", order = order) +
facet_grid(treatment ~) +
plot <- water %>%
filter(Value < 28, Call == "Pass", Assay %in% manargs, !treatment == "WCS" ) %>%
group_by(treatment, Assay) %>%
dplyr::mutate(mean = mean(as.numeric(Value))) %>%
ggboxplot(x = "Assay", y = "Value", fill = "Assay", order = order) +
facet_grid(~ treatment) +
scale_fill_viridis_d() +
coord_flip() +
theme(legend.position = "none") +
labs(y = "mean Ct value", x = "Gene", title = "Cycle times for genes from poultry manure in runoff water ")
plot
plot <- water %>%
filter(Value < 28, Call == "Pass", Assay %in% manargs, !treatment == "WCS" ) %>%
group_by(treatment, Assay) %>%
dplyr::mutate(mean = mean(as.numeric(Value))) %>%
ggboxplot(x = "Assay", y = "Value", fill = "Assay", order = order) +
scale_fill_viridis_d() +
theme(legend.position = "none") +
labs(y = "mean Ct value", x = "Gene", title = "Cycle times for genes from poultry manure in runoff water ")
plot
plot <- water %>%
filter(Value < 28, Call == "Pass", Assay %in% manargs, !treatment == "WCS" ) %>%
group_by(treatment, Assay) %>%
dplyr::mutate(mean = mean(as.numeric(Value))) %>%
ggboxplot(x = "Assay", y = "Value", fill = "treatment", order = order) +
scale_fill_viridis_d() +
theme(legend.position = "none") +
labs(y = "mean Ct value", x = "Gene", title = "Cycle times for genes from poultry manure in runoff water ")
plot
plot <- water %>%
filter(Value < 28, Call == "Pass", Assay %in% manargs, !treatment == "WCS" ) %>%
group_by(treatment, Assay) %>%
dplyr::mutate(mean = mean(as.numeric(Value))) %>%
ggboxplot(x = "Assay", y = "Value", fill = "treatment", order = order) +
scale_fill_viridis_d() +
theme(legend.position = "none") +
coord_flip() +
labs(y = "mean Ct value", x = "Gene", title = "Cycle times for genes from poultry manure in runoff water ")
plot
plot <- water %>%
filter(Value < 28, Call == "Pass", Assay %in% manargs, !treatment == "WCS" ) %>%
group_by(treatment, Assay) %>%
dplyr::mutate(mean = mean(as.numeric(Value))) %>%
ggboxplot(x = "Assay", y = "Value", fill = "treatment", order = order) +
scale_fill_viridis_d() +
coord_flip() +
labs(y = "mean Ct value", x = "Gene", title = "Cycle times for genes from poultry manure in runoff water ")
plot
plot <- water %>%
filter(Value < 28, Call == "Pass", Assay %in% manargs, !treatment == "WCS" ) %>%
group_by(treatment, Assay) %>%
dplyr::mutate(mean = mean(as.numeric(Value))) %>%
ggboxplot(x = "Assay", y = "Value", fill = "treatment", order = order) +
scale_fill_viridis_d() +
coord_flip() +
labs(y = "mean Ct value", x = "Gene", title = "Cycle times for genes from poultry manure in runoff water ")
plot
ggsave(filename = "../plots/pultrymanurenwaterCT.png", plot = last_plot(), device = "png")
knitr::opts_chunk$set(echo = TRUE)
worle <- readRDS("data/worle_tax_are_seqs.RDS")
arm <- readRDS("data/armstrong_tax_are_seqs.RDS")
worle
arm
rm(arm, worle)
worle <- readRDS("data/Worle_curated.RDS")
worle
arm <- readRDS("data/Arm_curated.RDS")
arm
STRIPS <- merge_phyloseq(worle, arm)
library(phyloseq)
worle <- readRDS("data/Worle_curated.RDS")
worle
arm <- readRDS("data/Arm_curated.RDS")
arm
STRIPS <- merge_phyloseq(worle, arm)
STRIPS
#saveRDS(STRIPS, file = "data/all_samples_merged_STRIPS.RDS")
### Scale color for phyla, consistent phyla colors across plots
#Function to make all phyla colors consistent
phylalist <- data.frame(tax_table(STRIPS),row.names = NULL) %>%
select(Phylum) %>%
unique()
phylalist$Phylum <- as.character(phylalist$Phylum)
phylalist$Phylum[is.na(phylalist$Phylum)] <- "Unclassified"
# this package will generate a pallette based on number and desired colors
library(colorspace)
colors <- sequential_hcl(n_distinct(phylalist), palette = "viridis") %>%
sample() %>%
setNames(phylalist$Phylum)
rm(STRIPS)
library(phyloseq)
library(tidyverse)
library(ggplot2)
library(ggpubr)
library(kableExtra)
library(venn)
library(phylosmith)
library(phylosmith)
arm_manure <- subset_samples(arm, matrix == c("manure"))
sample_names(arm_manure)
data.frame(sample_sums(arm_manure)) %>%
rownames_to_column(var = "Sample") %>%
as_tibble() %>%
ggplot(aes(x = reorder(Sample, sample_sums.arm_manure.), y = sample_sums.arm_manure.)) +
geom_bar(stat = "identity")
arm_manure_mintax1 <- arm_manure %>%
filter_taxa(function(x) sum(x) >= 1, T)
rm(arm_manure)
data.frame(sample_sums(arm_manure_mintax1)) %>%
rownames_to_column(var = "Sample") %>%
as_tibble() %>%
ggplot(aes(x = reorder(Sample, sample_sums.arm_manure_mintax1.), y = sample_sums.arm_manure_mintax1.)) +
geom_bar(stat = "identity")
arm_manure_asvs <- taxa_names(arm_manure_mintax1)
armphylo <- phylogeny_profile(arm_manure_mintax1, classification = "Phylum")
armphylo + scale_color_manual(aesthetics = "fill", values = colors)
worle_manure <- subset_samples(worle, matrix == c("manure"))
sample_names(worle_manure)
data.frame(sample_sums(worle_manure)) %>%
rownames_to_column(var = "Sample") %>%
as_tibble() %>%
ggplot(aes(x = reorder(Sample, sample_sums.worle_manure.), y = sample_sums.worle_manure.)) +
geom_bar(stat = "identity")
worle_manure_mintax1 <- worle_manure %>%
filter_taxa(function(x) sum(x) >= 1, T)
rm(worle_manure)
data.frame(sample_sums(worle_manure_mintax1)) %>%
rownames_to_column(var = "Sample") %>%
as_tibble() %>%
ggplot(aes(x = reorder(Sample, sample_sums.worle_manure_mintax1.), y = sample_sums.worle_manure_mintax1.)) +
geom_bar(stat = "identity")
worle_manure_asvs <- taxa_names(worle_manure_mintax1)
worlephylo <- phylogeny_profile(worle_manure_mintax1, classification = "Phylum")
worlephylo + scale_color_manual(aesthetics = "fill", values = colors)
worlephylo <- phylogeny_profile(worle_manure_mintax1, classification = "Phylum", relative_abundance = T)
worlephylo + scale_color_manual(aesthetics = "fill", values = colors)
worlephylo + scale_color_manual(aesthetics = "fill", values = colors)
ggsave(filename = "~/Desktop/biomark-private/plots/worlemanure16spylogeny.png", plot = last_plot(), device = "png")
colors <- sequential_hcl(n_distinct(phylalist), palette = "viridis") %>%
sample() %>%
setNames(phylalist$Phylum)
worlephylo + scale_color_manual(aesthetics = "fill", values = colors)
sample_data(worlephylo)
sample_data(worle_manure_mintax1n)
sample_data(worle_manure_mintax1)
taxa_abundance_bars(worlephylo, classification = "Phylum", treatment = c("unique_id", "block"), subset = NULL, transformation = 'mean', colors = colors)
taxa_abundance_bars(worle_manure_mintax1, classification = "Phylum", treatment = c("unique_id", "block"), subset = NULL, transformation = 'mean', colors = colors)
taxa_abundance_bars(worle_manure_mintax1, classification = "Phylum", treatment = c("unique_id", "block"), subset = NULL, transformation = 'mean', colors = colors) + coord_flip()
taxa_abundance_bars(worle_manure_mintax1, classification = "Phylum", treatment = c("unique_id", "block"), subset = NULL, transformation = 'mean', colors = colors) + coord_flip() + scale_y_reverse()
taxa_abundance_bars(worle_manure_mintax1, classification = "Phylum", treatment = c("unique_id", "block"), subset = NULL, transformation = 'mean', colors = colors) + coord_flip() + scale_x_reverse()
taxa_abundance_bars(worle_manure_mintax1, classification = "Phylum", treatment = c("unique_id", "block"), subset = NULL, transformation = 'mean', colors = colors)  + scale_x_reverse() + coord_flip()
taxa_abundance_bars(worle_manure_mintax1, classification = "Phylum", treatment = c("unique_id", "block"), subset = NULL, transformation = 'mean', colors = colors)  + scale_x_reverse()
taxa_abundance_bars(worle_manure_mintax1, classification = "Phylum", treatment = c("unique_id", "block"), subset = NULL, transformation = 'mean', colors = colors)  + scale_y_reverse()
taxa_abundance_bars(worle_manure_mintax1, classification = "Phylum", treatment = c("unique_id", "block"), subset = NULL, transformation = 'mean', colors = colors)  + scale_y_reverse() + coord_flip()
taxa_abundance_bars(worle_manure_mintax1, classification = "Phylum", treatment = c("unique_id", "block"), subset = NULL, transformation = 'mean', colors = colors)  + coord_flip()
taxa_abundance_bars(worle_manure_mintax1, classification = "Phylum", treatment = c("unique_id", "block"), subset = NULL, transformation = 'mean', colors = colors)
taxa_abundance_bars(worle_manure_mintax1, classification = "Phylum", treatment = c("unique_id", "block"), subset = NULL, transformation = 'mean', colors = colors) + theme_pubr()
taxa_abundance_bars(worle_manure_mintax1, classification = "Phylum", treatment = c("unique_id", "block"), subset = NULL, transformation = 'mean', colors = colors)
taxa_abundance_bars(worle_manure_mintax1, classification = "Phylum", treatment = c("unique_id", "block"), subset = NULL, transformation = 'mean', colors = colors) + theme_minimal()
taxa_abundance_bars(worle_manure_mintax1, classification = "Phylum", treatment = c("unique_id", "block"), subset = NULL, transformation = 'mean', colors = colors)
taxa_abundance_bars(worle_manure_mintax1, classification = "Phylum", treatment = c("unique_id", "block"), subset = NULL, transformation = 'mean', colors = colors) + theme(legend.title = "Poultry manure sample")
taxa_abundance_bars(worle_manure_mintax1, classification = "Phylum", treatment = c("unique_id", "block"), subset = NULL, transformation = 'mean', colors = colors) + theme(legend.title = element_text("Poultry manure sample"))
taxa_abundance_bars(worle_manure_mintax1, classification = "Phylum", treatment = c("unique_id", "block"), subset = NULL, transformation = 'mean', colors = colors) +
theme(legend.title = element_text("Poultry manure sample"))
taxa_abundance_bars(worle_manure_mintax1, classification = "Phylum", treatment = c("matrix"), subset = NULL, transformation = 'mean', colors = colors)
taxa_abundance_bars(worle_manure_mintax1, classification = "Phylum", treatment = c("matrix"), subset = NULL, transformation = 'mean', colors = colors) + theme(legend.position = "none")
taxa_abundance_bars(worle_manure_mintax1, classification = "Phylum", treatment = c("matrix"), subset = NULL, transformation = 'mean', colors = colors) + theme(legend.position = "none")
ggsave(filename = "~/Desktop/biomark-private/plots/worlemanure16spylogeny.png", plot = last_plot(), device = "png")
ggsave(filename = "~/Desktop/biomark-private/plots/worlemanure16spylogeny.png", plot = last_plot(), device = "png", height = 8, width = 8)
taxa_abundance_bars(worle_manure_mintax1, classification = "Phylum", treatment = c("matrix"), subset = NULL, transformation = 'mean', colors = colors) + theme(legend.position = "none")
ggsave(filename = "~/Desktop/biomark-private/plots/worlemanure16spylogeny.png", plot = last_plot(), device = "png", height = 8, width = 8)
taxa_abundance_bars(worle_manure_mintax1, classification = "Phylum", treatment = c("matrix", "block"), subset = NULL, transformation = 'mean', colors = colors) + theme(legend.position = "none")
ggsave(filename = "~/Desktop/biomark-private/plots/worlemanure16staxa.png", plot = last_plot(), device = "png", height = 8, width = 8)
ggsave(filename = "~/Desktop/biomark-private/plots/worlemanure16staxa.png", plot = last_plot(), device = "png", height = 6, width = 8)
worle_soil_mintax1 <- subset_samples(worle, matrix == c("soil") & manure_treatment == c("N")) %>%
filter_taxa(function(x) sum(x) >= 1, T)
nsamples(arm_soil_mintax1)
worle_soil_mintax1 <- subset_samples(worle, matrix == c("soil") & manure_treatment == c("N")) %>%
filter_taxa(function(x) sum(x) >= 1, T)
#nsamples(arm_soil_mintax1)
kable(data.frame(sample_data(worle_soil_mintax1), row.names = NULL)) %>%
kable_styling(bootstrap_options = "striped") %>%
scroll_box(width = "100%", height = "600px")
worle_soil_asvs <- taxa_names(worle_soil_mintax1)
arm_vvv_diag <- venn(list("Manure_ASVs" = arm_manure_asvs, "Soil_ASVs" = arm_soil_asvs))
worle_vvv_diag <- venn(list("Manure_ASVs" = worle_manure_asvs, "Soil_ASVs" = worle_soil_asvs))
worle_manure_persitors <- attr(worle_vvv_diag, "intersections")$Manure_ASVs
worle.soil.phy <- subset_samples(worle, matrix == "soil") %>%
filter_taxa(function(x) sum(x) >= 1, T) %>%
transform_sample_counts(function(x) x / sum(x))
worle.persistors.phy <- prune_taxa(worle_manure_persitors, worle.soil.phy)
ntaxa(worle.persistors.phy)
kable(data.frame(sample_data(worle.persistors.phy), row.names = NULL)) %>%
kable_styling(bootstrap_options = "striped") %>%
scroll_box(width = "100%", height = "600px")
worle.melted <- psmelt(worle.persistors.phy)
worle.g <- ggplot(worle.melted, aes(x = in_plot_location, y = Abundance))
worle.plot <- worle.g +
geom_bar(aes(fill = Phylum), stat = "identity") +
facet_grid(sample_day~treatment)
worle.plot + scale_color_manual(aesthetics = "fill", values = colors)
worle.g <- ggplot(worle.melted, aes(x = in_plot_location, y = Abundance))
worle.g
worle.plot + scale_color_manual(aesthetics = "fill", values = colors)
worle.g <- worle.melted %>%
filter(!treatment %in% "no_manure_strip", !sample_day %in% "Baseline") %>%
ggplot(aes(x = in_plot_location, y = Abundance))
worle.plot <- worle.g +
geom_bar(aes(fill = Phylum), stat = "identity") +
facet_grid(sample_day~treatment)
worle.plot + scale_color_manual(aesthetics = "fill", values = colors)
worle.plot + scale_color_manual(aesthetics = "fill", values = colors) + theme_pubr()
worle.melted
worle.g <- worle.melted %>%
filter(!treatment %in% "no_manure_strip", !sample_day %in% "Baseline") %>%
ggplot(aes(x = soil_type, y = Abundance))
worle.plot <- worle.g +
geom_bar(aes(fill = Phylum), stat = "identity") +
facet_grid(sample_day~treatment)
worle.plot + scale_color_manual(aesthetics = "fill", values = colors) + theme_pubr()
worle.g <- worle.melted %>%
filter(!treatment %in% "no_manure_strip", !sample_day %in% "Baseline", !soil_type %in% "border") %>%
ggplot(aes(x = soil_type, y = Abundance))
worle.plot <- worle.g +
geom_bar(aes(fill = Phylum), stat = "identity") +
facet_grid(sample_day~treatment)
worle.plot + scale_color_manual(aesthetics = "fill", values = colors) + theme_pubr()
worle.plot <- worle.g +
geom_bar(aes(fill = Phylum), stat = "identity") +
facet_grid(treatment ~ sample_day)
worle.plot + scale_color_manual(aesthetics = "fill", values = colors) + theme_pubr()
worle.plot + scale_color_manual(aesthetics = "fill", values = colors) + theme_pubr()
ggsave(filename = "~/Desktop/biomark-private/plots/worlesoil16sabundance.png", plot = last_plot(), device = "png", height = 8, width = 8)
View(worle.melted)
sample_data(worle)
pcoa_phyloseq(worle, c('matrix', 'treatment'), circle = TRUE)
rw <- worle %>%
filter_taxa(function(x) sum(x) >= 1, T) %>%
rarefy_even_depth(sample.size = 10000, rngseed = 1231231231231, replace = T)
rw <- worle %>%
filter_taxa(function(x) sum(x) >= 1, T) %>%
rarefy_even_depth(sample.size = 10000, rngseed = 1231, replace = T)
pcoa_phyloseq(rw, c('matrix'), circle = TRUE)
rw %>%
rw %>%
subset_samples(matrix == c("water")) %>%
pcoa_phyloseq(c('treatment', cirlce = T))
rw %>%
subset_samples(matrix == c("water")) %>%
pcoa_phyloseq(c('treatment', cirlce = T))
rw %>%
subset_samples(matrix == c("water")) %>%
pcoa_phyloseq(., c('treatment', cirlce = T))
rww <- rw %>%
subset_samples(matrix == c("water"))
pcoa_phyloseq(rww, c('treatment'), circle = TRUE)
colnames(sample_data(rww))
sample_data(rww)
pcoa_phyloseq(rww, c('treatment'), circle = TRUE)
pcoa_phyloseq(rww, c('treatment'), circle = TRUE, method = "bray")
pcoa_phyloseq(rw, c('matrix'), circle = TRUE)
pcoa_phyloseq(rww, c('treatment'), circle = TRUE, method = "bray") +  geom_point(aes(shape = factor(depth)))
tets <- pcoa_phyloseq(rww, c('treatment'), circle = TRUE, method = "bray")
tets + geom_point(aes(shape = factor(depth)))
pcoa_phyloseq(rw, c('matrix'), circle = TRUE) + geom_point(aes(shape = factor(depth)))
pcoa_phyloseq(rw, c('depth'), circle = TRUE) + geom_point(aes(shape = factor(matrix)))
pcoa_phyloseq(rw, c('matrix'), circle = TRUE)
ggsave(filename = "~/Desktop/biomark-private/plots/worlepcoa.png", plot = last_plot(), device = "png")
nmds_phyloseq(rw, c('matrix'), circle = TRUE)
ggsave(filename = "~/Desktop/biomark-private/plots/worleNMDS.png", plot = last_plot(), device = "png")
worle.soil.phy <- subset_samples(worle, matrix == "water") %>%
filter_taxa(function(x) sum(x) >= 1, T) %>%
transform_sample_counts(function(x) x / sum(x))
sample_data(worle.soil.phy)
worle.persistors.phy <- prune_taxa(worle_manure_persitors, worle.soil.phy)
worle.melted <- psmelt(worle.persistors.phy)
worle.melted %>%
separate(unique_id, 'A', 'B')
worle.melted %>%
separate(unique_id, 'A', 'B', sep = "-")
worle.melted %>%
separate(unique_id, c('A', 'B'), sep = "-")
worle.melted <- worle.melted %>%
separate(unique_id, c('A', 'water_sample'), sep = "-")
worle.melted <- worle.melted %>%
filter(!grepl("Comp", unique_id)) %>%
separate(unique_id, c('A', 'water_sample'), sep = "-")
worle.melted <- psmelt(worle.persistors.phy)
worle.melted <- worle.melted %>%
filter(!grepl("Comp", unique_id)) %>%
separate(unique_id, c('A', 'water_sample'), sep = "-")
worle.g <- worle.melted %>%
filter(!treatment %in% "no_manure_strip") %>%
ggplot(aes(x = water_sample, y = Abundance))
worle.plot <- worle.g +
geom_bar(aes(fill = Phylum), stat = "identity") +
facet_grid(treatment)
worle.plot <- worle.g +
geom_bar(aes(fill = Phylum), stat = "identity") +
facet_grid(~treatment)
worle.plot + scale_color_manual(aesthetics = "fill", values = colors) + theme_pubr()
ggsave(filename = "~/Desktop/biomark-private/plots/worlewater16sabundance.png", plot = last_plot(), device = "png", height = 8, width = 8)
ggboxplot(mwatertetM, x = "sample_number", y = "tetM", fill = "treatment", add = "dotplot") +
labs(x = "Water Sample", y = "Log 10 tetM gene copies") +
scale_y_continuous(trans = 'log10') +
scale_fill_viridis_d()
tetM
inverse.lm <- lm(data = tetM$data, formula = log10(counts+1) ~ as.numeric(Value))
val2 <- mwatertetM$Value
mwatertetM$tetM <- 10 ^ predict(inverse.lm ,data.frame(Value = val2), interval = "predict")[,1]
mwatertetM
ggboxplot(mwatertetM, x = "sample_number", y = "tetM", fill = "treatment", add = "dotplot") +
labs(x = "Water Sample", y = "Log 10 tetM gene copies") +
scale_y_continuous(trans = 'log10') +
scale_fill_viridis_d()
ggsave("../plots/tetMwater.png", plot = last_plot(), device = "png")
ggboxplot(mwatertetM, x = "sample_number", y = "tetM", fill = "treatment", add = "dotplot") +
labs(x = "Water Sample", y = "Log 10 tetM gene copies") +
scale_y_continuous(trans = 'log10') +
scale_fill_viridis_d()
ggsave("../plots/tetMwater.png", plot = last_plot(), device = "png", height = 8, width = 8)
ggboxplot(mwatertetM, x = "sample_number", y = "tetM", fill = "treatment", add = "dotplot") +
labs(x = "Water Sample", y = "Log 10 tetM gene copies") +
scale_y_continuous(trans = 'log10') +
scale_fill_viridis_d()
ggsave("../plots/tetMwater.png", plot = last_plot(), device = "png", height = 8, width = 4)
ggsave("../plots/tetMwater.png", plot = last_plot(), device = "png", width = 6.5)
tetX
inverse.lm <- lm(data = tetX$data, formula = log10(counts+1) ~ as.numeric(Value))
val2 <- mwatertetX$Value
mwatertetX$tetX <- 10 ^ predict(inverse.lm ,data.frame(Value = val2), interval = "predict")[,1]
mwatertetX
ggboxplot(mwatertetX, x = "sample_number", y = "tetX", fill = "treatment", add = "dotplot") +
labs(x = "Water Sample", y = "Log 10 tetX gene copies") +
scale_y_continuous(trans = 'log10') +
scale_fill_viridis_d()
ggsave("../plots/tetXwater.png", plot = last_plot(), device = "png")
ggboxplot(mwatertetM, x = "sample_number", y = "tetM", fill = "treatment", add = "dotplot") +
labs(x = "Water Sample", y = "Log 10 tetM gene copies") +
scale_y_continuous(trans = 'log10') +
scale_fill_viridis_d()
ggsave("../plots/tetMwater.png", plot = last_plot(), device = "png")
water$Value <- as.numeric(water$Value)
inverse.lm <- lm(data = sixS$data, formula = log10(counts+1) ~ as.numeric(Value))
val2 <- mwater16S$Value
mwater16S$sixS <- 10 ^ predict(inverse.lm ,data.frame(Value = val2), interval = "predict")[,1]
mwater16S
ggboxplot(mwater16S, x = "sample_number", y = "sixS", fill = "treatment", add = "dotplot") +
labs(x = "Water Sample", y = "Log 10 gene 16s copies") +
scale_y_continuous(trans = 'log10') +
scale_fill_viridis_d()
ggsave("../plots/16swater.png", plot = last_plot(), device = "png")
